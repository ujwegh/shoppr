buildscript {
    ext{
        logbackGelfVersion = '4.0.0'
        groovyVersion = '2.4.15'
        caffeine = '3.0.4'
        micrometer = '1.7.1'
        resilience4j = '1.7.0'
        guava = '27.0-jre'
        commons_lang = '2.6'
        log4j = '1.2.17'
        jupiter = '5.6.0'
    }
}

group 'ru.nik'
version '1.0'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}


java {
    withSourcesJar()
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'shoppr-starter'
            from components.java
        }
    }
}


dependencies {
    api("org.springframework.boot:spring-boot-starter-webflux")
    api("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    api("org.springframework.cloud:spring-cloud-sleuth-zipkin")
    api("org.springframework.boot:spring-boot-starter-actuator")
    api("org.springframework.cloud:spring-cloud-commons")
    api("com.github.ben-manes.caffeine:caffeine:${caffeine}")
    api("io.micrometer:micrometer-core:${micrometer}")
    api("io.github.resilience4j:resilience4j-spring-boot2:${resilience4j}")
    api("io.github.resilience4j:resilience4j-reactor:${resilience4j}")
    api("com.google.guava:guava:${guava}")
    api("commons-lang:commons-lang:${commons_lang}")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //logging
    api("de.siegmar:logback-gelf:${logbackGelfVersion}")
    api("org.codehaus.groovy:groovy-all:${groovyVersion}")
    api("org.springframework.cloud:spring-cloud-starter-sleuth")
    api("log4j:log4j:${log4j}")

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiter}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}